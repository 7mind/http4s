#!/usr/bin/env bash

function decrypt_deploy_key() {
    if [[ $TRAVIS_PULL_REQUEST = "false" && $TRAVIS_REPO_SLUG = "http4s/http4s" ]]; then
        echo "Decrypting deploy key"
        eval "$(ssh-agent -s)"
        openssl aes-256-cbc -K $encrypted_8735ae5b3321_key -iv $encrypted_8735ae5b3321_iv -in project/travis-deploy-key.enc -d | ssh-add -
    else
        echo "Not decrypting deploy key for a pull request"
    fi
}

function decrypt_pgp_secrets() {
    if [[ $TRAVIS_PULL_REQUEST = "false" && $TRAVIS_REPO_SLUG = "http4s/http4s" ]]; then
        echo "Decrypting PGP secrets"
        openssl aes-256-cbc -K $encrypted_8735ae5b3321_key -iv $encrypted_8735ae5b3321_iv -in project/.gnupg/secret.tar.enc -out project/.gnupg/secret.tar -d
        tar xv -C project/.gnupg -f project/.gnupg/secret.tar
    else
        echo "Not decrypting pgp secrets on a pull request"
    fi
}

function configure_git() {
    echo "Configuring git"
    git config --global user.name "Travis CI"
    git config --global user.email "travis-ci@http4s.org"

    local SHORT_COMMIT=$(printf "%.8s" "$TRAVIS_COMMIT")

    read -r -d '' SBT_GHPAGES_COMMIT_MESSAGE <<EOM
Updated site from $SHORT_COMMIT

Job:    $TRAVIS_JOB_NUMBER
Commit: $SHORT_COMMIT
Detail: https://travis-ci.org/$TRAVIS_REPO_SLUG/builds/$TRAVIS_BUILD_ID
EOM

    if [[ $TRAVIS_PULL_REQUEST = 'false' ]]; then
        git remote add upstream git@github.com:${TRAVIS_REPO_SLUG}.git

        local head_ref=$(git rev-parse HEAD)
        local branch_ref=$(git rev-parse "$TRAVIS_BRANCH")
        if [[ $head_ref != $branch_ref ]]; then
            echo "Error reattaching head: $head_ref is not HEAD of $TRAVIS_BRANCH ($branch_ref)"
            exit 1
        fi

        # Reattach our head
        git checkout -qf $TRAVIS_BRANCH

        git fetch -q upstream
        git branch -u upstream/${TRAVIS_BRANCH}
    fi
    return 0
}

function cleanup_cache() {
    echo "Cleaning up the cache"
    find $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
    find $HOME/.sbt        -name "*.lock"               -print -delete
}

function upload_codecov() {
    if find . -name 'scoverage-data' -exec false {} +; then
        echo "No codecov report found. Skipping upload."
    else
        echo "Uploading codecov"
        bash <(curl -s https://codecov.io/bash)
    fi
}
